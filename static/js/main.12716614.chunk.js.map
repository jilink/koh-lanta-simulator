{"version":3,"sources":["components/Header.js","classes/Statics.js","classes/Candidate.js","classes/Team.js","classes/Game.js","components/TextGame.js","components/TeamComponent.js","components/GameComponent.js","components/FormComponent.js","pages/Contact.js","MainRouter.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["Header","Navbar","bg","variant","expand","className","to","Brand","Nav","Link","href","React","Component","Statics","keys","Object","EPREUVE","length","Math","random","array","exclude","undefined","includes","excludeIndex","indexOf","splice","floor","dic","candidate1","candidate2","text","competence","replace","name","type","typeName","candidate","reduce","prev","curr","arr1","arr2","concat","filter","item","toString","substr","COLORS","INFO","DENIS","PARCOURS_COMBATANT","fatigue","INSECTES","RADEAUX","POUTRE","CORDE","RELAIS_NATATION","BOUE","TIR_ARC","PRESENTATION1","PRESENTATION2","PRESENTATION3","TEAM_CONGRATS","TEAM_CONGRATS_SOLO","TEAM_SHAME","TEAM_SHAME_SOLO","JOKES","EVENT","INJURED","FOUND_WATER","FOUND_ALCOHOL","MADE_FIRE","STOP_FIRE","COLLIER","DISPUTE","AMITIE","DROLE","MANIOK","PECHE","PLUIE","CABANE","CABANE_DESTRUCTED","COMPLOT","TRISTE","Candidate","genre","this","TYPE","NORMAL","faim","items","friends","ennemies","immunity","unite","vitesseFatigue","vitesseFaim","intelligence","push","candidates","immunedCandidates","color","diffArray","votedCandidate","randomArray","slice","vote","key","uniqueKey","notFriendsCandidates","MAUVAIS","chance","force","vitesse","natation","survie","precision","GENTIL","MECHANT","FOU","PARFAIT","FUN","SPORTIF","STRATEGE","DOYEN","FLEMMARD","CHANCEUX","MALCHANCEUX","BAVARD","GOURMAND","MUSCLE","DEPRESSIF","PLAINTIF","PEUREUX","DEBROUILLARD","NAGEUR","Team","number","getRandomTeamName","parseInt","getRandomCandidates","singleTimeEvents","rareSingleTimeEvents","multipleTimesEvents","rareMultipleTimesEvents","lastEliminated","names","addCandidates","i","randomIndex","randomName","getRandomType","eliminatedCandidateIndex","index","semaine","camp","texts","CAMP","presentations","VICTOIRE_CONFORT","ECHEC_CONFORT","VICTOIRE_IMMUNITE","ECHEC_IMMUNITE","randomCampEvent","conseil","solo","votesNames","votes","getImmunedCandidates","depouille","countOccurrences","entries","val","eliminatedCandidate","mostVoteCandidate","eliminate","modeMap","maxEl","maxCount","el","event","happening","lovedByEverybody","hatedByEverybody","addItem","replaceDialogueSolo","updateFaims","tmpCandidates","randomCandidate","randomCandidate2","replaceDialogue","addFriend","nb_participants","total","getCompetence","weakest","strongest","getFatigue","congratulatedCandidate","getStrongestFromCompetence","shamedCandidate","getWeakestFromCompetence","addEnnemy","updateFatigue","updateFaim","hatedCandidate","lovedCandidate","Game","team1","team2","team3","continue","eliminates","currentText","currentTextIndex","numberDisplay","weekText","team1DisplayCandidates","team2DisplayCandidates","team3DisplayCandidates","displaySolo","final","events","epreuveSolo","epreuveEquipes","team3Candidates","epreuve","randomEpreuve","loserTeam","winnerTeam","winnerEquipes","congrats","updateFatigues","shame","getLastEliminated","min","getTotalOfCompetence","winner","CAMP_NORMAL","immune","notImmune","team","orientation","poteaux","loser","getWeakestFromFatigue","getStrongestFromFatigue","week","ReactGa","category","action","defaultStyles","overflow","width","display","justifyContent","alignItems","fontSize","border","borderRadius","height","padding","TextGame","scrollToBottom","setTimeout","messagesEnd","scrollIntoView","behavior","style","props","from","opacity","enter","leave","styles","div","background","float","clear","ref","PureComponent","GameComponent","ListGroup","Item","Container","state","disabledNext","next","bind","team1Name","team1Color","numberCandidates","team1Candidates","team2Name","team2Color","team2Candidates","game","setState","getCurrentText","candidatesTeam1","getTeam1DisplayCandidates","candidatesTeam2","getTeam2DisplayCandidates","candidatesTeam3","getTeam3DisplayCandidates","getDisplaySolo","Row","Col","isMobile","TeamComponent","md","Button","onClick","disabled","FormComponent","handleChangeTeam1ColorDrag","hex","handleChangeTeam2ColorDrag","handleChangeTeam1Color","handleChangeTeam2Color","filling","step","teams","handleChange","handleChangeCandidate","handleSubmit","handleStep","getCandidatesFromDic","target","value","dicKeys","types","typeKeys","team1Form","team2Form","onChange","e","Form","Control","placeholder","maxLength","as","Alert","Heading","Group","controlId","Label","column","sm","onChangeComplete","Contact","sendEmail","pageview","preventDefault","emailjs","sendForm","then","result","alert","error","reset","onSubmit","varient","required","rows","MainRouter","basename","exact","path","Home","App","history","createHistory","initialize","listen","location","pathname","search","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.12716614.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport '../App.css';\nimport { Link } from 'react-router-dom';\n\nclass Header extends React.Component {\n\n    render(){\n        return (\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" className=\"mb-3\">\n                    <Link to=\"/\"><Navbar.Brand className=\"logo\">KOH-LANTA SIMULATOR</Navbar.Brand></Link>\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href=\"/koh-lanta-simulator/contact\">Contact</Nav.Link>\n                    </Nav>\n                </Navbar>\n        );\n    }\n}\n\nexport default Header;\n","export default class Statics {\n  static COLORS = {\n    INFO: \"#88d8b0\",\n    DENIS: \"#2F9599\",\n  }\n\n  static EPREUVE = {\n    PARCOURS_COMBATANT: {\n      name: \"parcours du combattant\",\n      type: \"vitesse\",\n      fatigue: 10,\n    },\n    INSECTES: {\n      name: \"degustation d'insectes\",\n      type: \"survie\",\n      fatigue: 2,\n    },\n    RADEAUX: {\n      name: \"radeaux\",\n      type: \"intelligence\",\n      fatigue: 7,\n    },\n    POUTRE: {\n      name: \"les poutres\",\n      type: \"chance\",\n      fatigue: 5,\n    },\n    CORDE: {\n      name: \"la corde\",\n      type: \"force\",\n      fatigue: 7,\n    },\n    RELAIS_NATATION: {\n      name: \"relais en mer\",\n      type: \"natation\",\n      fatigue: 6,\n    },\n    BOUE: {\n      name: \"boue\",\n      type: \"intelligence\",\n      fatigue: 4,\n    },\n    TIR_ARC: {\n      name: \"tir à l'arc\",\n      type: \"precision\",\n      fatigue: 3,\n    },\n  }\n\n  static PRESENTATION1 = {\n    \"H\" : [\n      \"NAME1: Bonjour je me présente moi c'est NAME1, je cherche un allié dans l'aventure quelqu'un comme toi de TYPE2\",\n      \"NAME1: Wesh, toi + moi = poto?\",\n      \"NAME1: Excuse j'ai oublié ton nom c'est Amandine ou NAME2 ?\",\n      \"NAME1: Je vais être franc NAME2, toi et moi on va pas être potes, on va être les meilleurs potes !\",\n      \"NAME1: NAME2 SOIT MON AMI SOIT MON AMI STP !\",\n      \"NAME1: Yo je suis TYPE1, ça te dit qu'on devienne amis NAME2 ?\",\n    ],\n    \"F\" : [\n      \"NAME1: Bonjour je me présente moi c'est NAME1, je cherche un allié dans l'aventure quelqu'un comme toi de TYPE2\",\n      \"NAME1: Coucou, toi + moi = poto?\",\n      \"NAME1: Excuse j'ai oublié ton nom c'est Amandine ou NAME2 ?\",\n      \"NAME1: Je vais être franche NAME2, toi et moi on va pas être potes, on va être les meilleurs potes !\",\n      \"NAME1: NAME2 SOIT MON AMI SOIT MON AMI STP !\",\n      \"NAME1: Yo je suis TYPE1, ça te dit qu'on devienne amis NAME2 ?\",\n    ]\n  }\n\n  static PRESENTATION2 = {\n    \"H\" : [\n      \"NAME2: Euh... salut NAME1 si tu veux qu'on fasse connaissance je te préviens directe je suis TYPE2\",\n      \"NAME2: Tout ce que j'ai toujours voulu toute ma vie c'est qu'on soit amis NAME1 même si on s'est rencontré y a 5 minutes je sais ...\",\n      \"NAME2: Toi t'es TYPE1 et moi je suis TYPE2 on ferait une bonne équipe en vrai NAME1\",\n      \"NAME2: Oh cool on arrête pas de me proposer des amitiés, d'abord Caroline en CM2 et maintenant toi NAME1 !\",\n      \"NAME2: NAME1 ok je veux bien qu'on soit potes mais j'aime pas trop ton côté TYPE1\",\n    ],\n    \"F\" : [\n      \"NAME2: Euh... salut NAME1 si tu veux qu'on fasse connaissance je te préviens directe je suis TYPE2\",\n      \"NAME2: Tout ce que j'ai toujours voulu toute ma vie c'est qu'on soit amis NAME1 même si on s'est rencontré y a 5 minutes je sais ...\",\n      \"NAME2: Toi t'es TYPE1 et moi je suis TYPE2 on ferait une bonne équipe en vrai NAME1\",\n      \"NAME2: Oh cool on arrête pas de me proposer des amitiés, d'abord Benoît en CE1 et maintenant toi NAME1 !\",\n      \"NAME2: NAME1 ok je veux bien qu'on soit potes mais j'aime pas trop ton côté TYPE1\",\n    ],\n  }\n  \n\n  static PRESENTATION3 ={\n    \"H\" :[\n      \"NAME: On dirait que y a que moi qui me suis pas fait de pote ça se fait pas moi qui suis si TYPE\",\n      \"NAME: Okok personne vient me parler à moi je retiens t'façon j'ai toujours su que c'était QU'UNE BANDE D...\",\n      \"NAME: Bizarre, dans la vie je suis pourtant très apprecié de mon cactus de compagnie et là personne ne vient me parler\",\n      \"NAME: Je suis quelqu'un de simple, on dit aussi de moi que je suis TYPE, mais sans amis c'est la première fois de ma vie ...\",\n      \"NAME: Je suis allé dire bonjour à tout le monde on m'a ignoré mais pas grave chacun fait sa vie y a pas de soucis, le jour ou je trouve l'eau je la garde pour moi, si je fais le feu il sera que pour moi et j'irais aux toilettes tout seul aussi pas de problèmes j'ai compris !!\"\n    ],\n    \"F\" :[\n      \"NAME: On dirait que y a que moi qui me suis pas fait de pote ça se fait pas moi qui suis si TYPE\",\n      \"NAME: Okok personne vient me parler à moi je retiens t'façon j'ai toujours su que c'était QU'UNE BANDE D...\",\n      \"NAME: Bizarre, dans la vie je suis pourtant très appreciée de mon cactus de compagnie et là personne ne vient me parler\",\n      \"NAME: Je suis une fille simple, on dit aussi de moi que je suis TYPE, mais sans amis c'est la première fois de ma vie ...\",\n      \"NAME: Je suis allée dire bonjour à tout le monde on m'a ignorée mais pas grave chacun fait sa vie y a pas de soucis, le jour ou je trouve l'eau je la garde pour moi, si je fais le feu il sera que pour moi et j'irais aux toilettes toute seul aussi pas de problèmes j'ai compris !!\"\n    ],\n  }\n\n  static TEAM_CONGRATS = {\n    \"H\": [\n      \"NAME1: Ok je vais dire un truc que tout le monde pense on aurait jamais réussi sans NAME2 qui est si TYPE2, c'est ce qu'il fallait pour une épreuve COMPETENCE\", \n      \"NAME1: OMG qui aurait cru quelqu'un de TYPE2 comme NAME2 nous aurait fait gagner une épreuve COMPETENCE, bravo\", \n      \"NAME1: J'ai toujours su que t'étais un bon NAME2 depuis le premier jour ou je t'ai rencontré j'ai vu ce côté TYPE2\", \n      \"NAME1: Ecoute NAME2 je suis un gars réglo, t'as tout fait tout seul t'es fort pour ce qui est COMPETENCE, car tu es TYPE2\", \n    ],\n    \"F\": [\n      \"NAME1: Ok je vais dire un truc que tout le monde pense on aurait jamais réussi sans NAME2 qui est si TYPE2, c'est ce qu'il fallait pour une épreuve COMPETENCE\", \n      \"NAME1: OMG qui aurait cru que quelqu'un de TYPE2 comme NAME2 nous aurait fait gagner une épreuve COMPETENCE, bravo\", \n      \"NAME1: J'ai toujours su que t'étais un bon NAME2 depuis le premier jour ou je t'ai rencontré j'ai vu ce côté TYPE2\", \n      \"NAME1: Je suis une meuf sincère et ce que tu as fait ici NAME2 c'était génial, tu gère en COMPETENCE tu es tellement TYPE2\",\n    ],\n  }\n\n  static TEAM_CONGRATS_SOLO = {\n    \"H\": [\n      \"NAME: Oui je sais je suis un gars TYPE, je suis chaud en COMPETENCE, je vous ai tous sauvé\",\n      \"NAME: BOUM eeeet ouais sans moi on aurait perdu je suis un dieu pour les épreuves COMPETENCE\",\n    ],\n    \"F\": [\n      \"NAME: En plus d'être une femme TYPE je peux dire que je suis forte en COMPETENCE maintenant\",\n      \"NAME: Je suis grave cool je nous ai fait gagner car je suis TYPE donc forte en COMPETENCE\",\n    ],\n  }\n\n  static TEAM_SHAME = {\n    \"H\": [\n      \"NAME1: MAIS OMG NAME2 t'as tout gaché on était bien partit mais toi qui est TYPE2 t'es trop nul en COMPETENCE\",\n      \"NAME1: t'inquiète c'est pas parce que t'es TYPE2 qu'on a perdu NAME2 ... Attends si en fait c'est ta faute\",\n    ],\n    \"F\": [\n      \"NAME1: MAIS OMG NAME2 t'as tout gaché on était bien partit mais toi qui est TYPE2 t'es trop nul en COMPETENCE\",\n      \"NAME1: t'inquiète c'est pas parce que t'es TYPE2 qu'on a perdu NAME2 ... Attends si en fait c'est ta faute\",\n    ],\n  }\n\n  static TEAM_SHAME_SOLO = {\n    \"H\": [\n      \"NAME: Vous m'en voulez pas qu'on a perdu car je suis trop TYPE pas vrai ...?\",\n      \"NAME: COMPETENCE c'est pas mon fort je vous l'avais dit ... Ah non je vous l'avez pas dit ? Ah bah je vous le dis ...\",\n    ],\n    \"F\": [\n      \"NAME: Vous m'en voulez pas qu'on a perdu car je suis trop TYPE pas vrai ...?\",\n      \"NAME: COMPETENCE c'est pas mon fort je vous l'avais dit ... Ah non je vous l'avez pas dit ? Ah bah je vous le dis ...\",\n    ],\n  \n  }\n\n  static JOKES = [\n      \"NAME: Alors c'est l'histoire d'un pingouin qui respire par les fesses, un jour il s'assoit et il meurt ! HAhahaAHaha m'éliminez pas svp je suis actif sur le camps.\",\n      \"NAME:  Pourquoi les pêcheurs ne sont pas gros ? Parce qu’ils surveillent leur ligne. Voilà c'était pour détendre un peu l'atmosphère vu qu'on arrive pas à pêcher.\",\n      \"NAME:  C'est l'histoire d'un papier qui tombe à l'eau. Il crie « Au secours ! J’ai pas pied ! ». Ceux qui rigolent pas j'ai noté leurs noms.\",\n      \"NAME:  Comment appelle-t-on un bébé éléphant prématuré ? Un éléphant tôt. Voilà j'ai fait cette blague à mon fils Tony il était mort de rire donc je voulais partager avec vous.\",\n  ]\n\n  static EVENT = {\n    INJURED: \"blessé\",\n    FOUND_WATER: \"trouvé l'eau\",\n    FOUND_ALCOHOL: \"trouvé l'alcohol\",\n    MADE_FIRE: \"fait le feu\",\n    STOP_FIRE: \"éteint le feu\",\n    COLLIER: \"a trouvé un collier\",\n    DISPUTE: \"dispute\",\n    AMITIE: \"amitié\",\n    DROLE: \"drole\",\n    MANIOK: \"a trouvé le manioc\",\n    PECHE: \"est partit pêcher\",\n    PLUIE: \"grosse pluie\",\n    CABANE: \"construction de la cabane\",\n    CABANE_DESTRUCTED: \"destruction de la cabane\",\n    COMPLOT: \"complot\",\n    TRISTE: \"triste\",\n  }\n\n  static randomEpreuve(){\n    let keys = Object.keys(Statics.EPREUVE);\n    return Statics.EPREUVE[keys[ keys.length * Math.random() << 0]];\n  }\n\n  static randomArray(array, exclude = undefined){\n    if (exclude && array.includes(exclude)) {\n      let excludeIndex = array.indexOf(exclude)\n      array.splice(excludeIndex, 1)\n    }\n    return array[Math.floor(Math.random() * array.length)];\n  }\n\n  static randomDic(dic){\n    return 0;\n  }\n\n  static replaceDialogue(candidate1, candidate2, text, competence=undefined){\n    text = text.replace(/NAME1/g, candidate1.name)\n    text = text.replace(/NAME2/g, candidate2.name)\n    text = text.replace(/TYPE1/g, candidate1.type.typeName)\n    text = text.replace(/TYPE2/g, candidate2.type.typeName)\n    if (competence){\n      text = text.replace(/COMPETENCE/g, competence)\n    }\n    return text;\n  }\n\n  static replaceDialogueSolo(candidate, text, competence=undefined){\n    text = text.replace(/NAME/g, candidate.name)\n    text = text.replace(/TYPE/g, candidate.type.typeName)\n    if (competence){\n      text = text.replace(/COMPETENCE/g, competence)\n    }\n    return text;\n  }\n\n  static countOccurrences(array){\n    return array.reduce((prev, curr) => ((prev[curr] = ++prev[curr] || 1, prev)), {});\n  }\n  \n  static diffArray(arr1, arr2) {\n    return arr1\n      .concat(arr2)\n      .filter(item => !arr1.includes(item) || !arr2.includes(item));\n  }\n\n  static uniqueKey() {\n   return '_' + Math.random().toString(36).substr(2, 9);\n  }\n}\n","import Statics from './Statics'\nexport default class Candidate {\n  static TYPE = {\n    NORMAL: {\n      typeName : \"normal\",\n    },\n    MAUVAIS: {\n      typeName: \"mauvais\",\n      vitesseFaim: 1.8,\n      vitesseFatigue: 1.8,\n      chance: 0.5,\n      force: 0.8,\n      vitesse: 0.8,\n      natation: 0.6,\n      survie: 0.7,\n      precision: 0.5,\n    },\n    GENTIL: {\n      typeName: \"gentil\",\n      chance: 0.8,\n      intelligence: 0.6,\n    },\n    MECHANT: {\n      typeName: \"mechant\",\n      vitesseFaim: 0.9,\n      force: 1.2,\n    },\n    FOU: {\n      typeName: \"fou\",\n      vitesseFaim: 0.8,\n      vitesseFatigue: 0.6,\n      chance: 1.6,\n      force: 0.9,\n      vitesse: 1.2,\n      natation: 1.1,\n      intelligence: 0.5,\n      precision: 0.8,\n    },\n    PARFAIT: {\n      typeName: \"parfait\",\n      vitesseFaim: 0.3,\n      vitesseFatigue: 0.3,\n      force: 1.5,\n      vitesse: 1.5,\n      natation: 1.5,\n      survie: 1.5,\n      intelligence: 1.5,\n      precision: 1.5,\n    },\n    FUN: {\n      typeName: \"fun\",\n      vitesseFaim: 1,\n      vitesseFatigue: 0.7,\n      vitesse: 0.8,\n      survie: 0.9,\n    },\n    SPORTIF: {\n      typeName: \"sportif\",\n      vitesseFaim: 1.2,\n      vitesseFatigue: 0.6,\n      force: 1.8,\n      vitesse: 1.8,\n      natation: 1.6,\n      precision: 1.1,\n    },\n    STRATEGE: {\n      typeName: \"stratege\",\n      vitesseFaim: 1.2,\n      vitesseFatigue: 1.2,\n      chance: 1.2,\n      force: 0.6,\n      vitesse: 0.7,\n      natation: 0.7,\n      survie: 0.8,\n      intelligence: 2,\n      precision: 0.9,\n    },\n    DOYEN: {\n      typeName: \"doyen\",\n      vitesseFaim: 0.8,\n      vitesseFatigue: 1.2,\n      chance: 1.1,\n      force: 0.7,\n      vitesse: 0.7,\n      survie: 1.3,\n      intelligence: 1.2,\n    },\n    FLEMMARD: {\n      typeName: \"flemmard\",\n      vitesseFatigue: 1.5,\n      chance: 1.2,\n      force: 0.8,\n      vitesse: 0.8,\n      survie: 0.5,\n    },\n    CHANCEUX: {\n      typeName: \"chanceux\",\n      chance: 2,\n      force: 0.9,\n      vitesse: 1.2,\n      natation: 1.1,\n      precision: 1.6,\n    },\n    MALCHANCEUX: {\n      typeName: \"malchanceux\",\n      vitesseFaim: 1.2,\n      vitesseFatigue: 1.3,\n      chance: 0.3,\n      force: 1.1,\n      vitesse: 1.3,\n      survie: 1.1,\n      precision: 0.6,\n    },\n    BAVARD: {\n      typeName: \"bavard\",\n      vitesseFaim: 1.5,\n      vitesseFatigue: 0.5,\n      chance: 1.3,\n      force: 0.8,\n      vitesse: 1.2,\n      natation: 1.3,\n      survie: 0.8,\n      intelligence: 0.8,\n    },\n    GOURMAND: {\n      typeName: \"gourmand\",\n      vitesseFaim: 1.8,\n      vitesseFatigue: 1.2,\n      force: 1.3,\n      vitesse: 0.8,\n      natation: 0.8,\n    },\n    MUSCLE: {\n      typeName: \"musclé\",\n      vitesseFaim: 1.3,\n      vitesseFatigue: 0.8,\n      force: 2,\n      vitesse: 1.6,\n      natation: 1.2,\n      survie: 0.7,\n      intelligence: 0.6,\n    },\n    DEPRESSIF: {\n      typeName: \"dépressif\",\n      vitesseFatigue: 1.6,\n      chance: 0.6,\n      force: 0.6,\n      vitesse: 0.6,\n      survie: 0.8,\n      intelligence: 1.2,\n    },\n    PLAINTIF: {\n      typeName: \"plaintif\",\n      vitesseFaim: 1.5,\n      vitesseFatigue: 1.5,\n      chance: 1.2,\n      vitesse: 0.9,\n      survie: 0.7,\n    },\n    PEUREUX: {\n      typeName: \"peureux\",\n      vitesseFaim: 1,\n      vitesseFatigue: 1,\n      chance: 1.2,\n      force: 0.6,\n      vitesse: 1.3,\n      natation: 0.7,\n      survie: 0.5,\n      intelligence: 1.1,\n    },\n    DEBROUILLARD: {\n      typeName: \"débrouillard\",\n      vitesseFaim: 0.8,\n      vitesseFatigue: 0.7,\n      chance: 0.6,\n      force: 1.2,\n      vitesse: 1.2,\n      natation: 1.2,\n      survie: 1.6,\n      intelligence: 1.2,\n      precision: 1.2,\n    },\n    NAGEUR: {\n      typeName: \"nageur\",\n      force: 1.2,\n      vitesse: 1.2,\n      natation: 2.1,\n    },\n  };\n\n  constructor(name, type, genre) {\n    this.name = name;\n    this.type = type || Candidate.TYPE.NORMAL;\n    this.genre = genre || \"H\";\n    this.faim = 0; // pourcentage de faim\n    this.fatigue = 0; // pourcentage de fatigue\n    this.items = []\n    this.friends = []\n    this.ennemies = []\n    this.immunity = false\n  }\n\n  presentation() {\n    // console.log(`Bonjour je suis ${this.name}, de type ${this.type.typeName} et je suis de genre ${this.genre}`)\n  }\n\n  getType() {\n    return this.type;\n  }\n\n  updateFatigue(unite) {\n    let vitesseFatigue = this.type.vitesseFatigue || 1\n    this.fatigue += unite * vitesseFatigue\n  }\n\n  updateFaim(unite) {\n    let vitesseFaim = this.type.vitesseFaim || 1\n    this.faim += unite * vitesseFaim\n  }\n\n  getFatigue() {\n    return this.fatigue\n  }\n\n  dialogue() {\n    return `${this.name} : je suis ${this.type.intelligence || 1}, ma fatigue est ${this.fatigue} , ma faim est de ${this.faim}`\n  }\n\n  addItem(item) {\n    this.items.push(item)\n  }\n\n  addFriend(candidate){\n    this.friends.push(candidate)\n  }\n\n  addEnnemy(candidate){\n    this.ennemies.push(candidate)\n  }\n\n  getCompetence(competence){\n    return this.type[competence] || 1\n  }\n\n  vote(candidates, immunedCandidates, color=\"white\") {\n    // Vote for an ennemy, if no ennemies, don't vote for a friend, if everybody friend or no friend vote for somebody random that is not you\n    candidates = Statics.diffArray(candidates, immunedCandidates)\n    if (this.ennemies.length) {\n      let votedCandidate = Statics.randomArray(this.ennemies.slice(), this)\n      if (candidates.includes(votedCandidate)) { // test if the ennemy is still in the team\n        return {vote: votedCandidate, text: {text: `${this.name}: Ce soir je vote contre toi ${votedCandidate.name} car tu es trop ${votedCandidate.type.typeName}`, color: color, key: Statics.uniqueKey() }}\n      }\n    }\n    if (this.friends.length) {\n      let notFriendsCandidates = Statics.diffArray(candidates, this.friends) \n      if (notFriendsCandidates.length) {\n        let votedCandidate = Statics.randomArray(notFriendsCandidates.slice(), this)\n        if (candidates.includes(votedCandidate)) { // test if the friend is still in the team\n          return {vote: votedCandidate, text: {text: `${this.name}: Désolé mais ce soir je vote contre toi ${votedCandidate.name} c'est pas personel juste que j'ai moins d'afinité avec toi`, color: color , key: Statics.uniqueKey()}}\n        }\n      }\n    }\n    return {vote: Statics.randomArray(candidates.slice(), this), text: {text: `${this.name}: Pour qui je vote ? Suspense`, color: color, key: Statics.uniqueKey()}}\n  }\n\n  immune() {\n    this.immunity = true\n  }\n\n  notImmune() {\n    this.immunity = false\n  }\n\n}\n\n","import Candidate from './Candidate'\nimport Statics from './Statics'\nexport default class Team {\n\n  static CAMP = {\n    NORMAL: \"normal\",\n    VICTOIRE_CONFORT: \"victoire confort\",\n    ECHEC_CONFORT: \"echec confort\",\n    VICTOIRE_IMMUNITE: \"victoire immunite\",\n    ECHEC_IMMUNITE: \"echec immunite\",\n  }\n \n  constructor({name=undefined, number=5, candidates=undefined, color=\"blue\"}) {\n    this.name = name || this.getRandomTeamName();\n    if (candidates && candidates.length >= parseInt(number, 10)) {\n      this.number =candidates.length\n      this.candidates = candidates\n    }\n    else {\n      this.number = parseInt(number, 10);\n      this.candidates = this.getRandomCandidates(this.number, candidates)\n    }\n    this.color=color\n    this.items = []\n    this.singleTimeEvents = [Statics.EVENT.FOUND_WATER, Statics.EVENT.FOUND_ALCOHOL, Statics.EVENT.MANIOK, Statics.EVENT.CABANE]\n    this.rareSingleTimeEvents = [Statics.EVENT.MADE_FIRE, Statics.EVENT.COLLIER, Statics.EVENT.COLLIER]\n    this.multipleTimesEvents = [Statics.EVENT.DISPUTE, Statics.EVENT.AMITIE, Statics.EVENT.DROLE,Statics.EVENT.COMPLOT, Statics.EVENT.TRISTE]\n    this.rareMultipleTimesEvents = [Statics.EVENT.PLUIE] // reflechir pour INJURED\n    this.lastEliminated = undefined\n  }\n\n  presentation(){\n    // console.log(`Bonjour nous somme l'équipe ${this.name}, actuellement nous sommes ${this.number}`)\n  }\n\n  getRandomCandidates(number, candidates=undefined){\n    let names = [\n      {name:\"Claude\", genre:\"H\"},\n      {name:\"Roger\", genre:\"H\"},\n      {name: \"Sarah\", genre:\"F\"},\n      {name: \"Philip\", genre:\"H\"},\n      {name: \"Moundir\", genre:\"H\"},\n      {name: \"Cindy\", genre:\"F\"},\n      {name: \"Lisa\", genre:\"F\"},\n      {name: \"Jean\", genre:\"H\"},\n      {name: \"Fabrice\", genre:\"H\"},\n      {name: \"Alexandre\", genre:\"H\"},\n      {name: \"Mathilde\", genre:\"F\"},\n      {name: \"Loic\", genre:\"H\"},\n      {name: \"Amandine\", genre:\"F\"},\n      {name: \"Antoine\", genre:\"H\"},\n      {name: \"Tara\", genre:\"F\"},\n      {name: \"Carole\", genre:\"F\"},\n      {name: \"Maurice\", genre:\"H\"},\n      {name: \"Didier\", genre:\"H\"},\n      {name: \"Nathalie\", genre:\"F\"},\n      {name: \"Joseph\", genre:\"H\"},\n      {name: \"Ahmad\", genre:\"H\"},\n      {name: \"Pascal\", genre:\"H\"},\n      {name: \"Lola\", genre:\"F\"},\n      {name: \"Alexandra\", genre:\"F\"},\n      {name: \"Thomas\", genre:\"H\"},\n      {name: \"Patricia\", genre:\"F\"},\n      {name: \"Gertrude\", genre:\"F\"},\n      {name: \"Antony\", genre:\"H\"},\n      {name: \"Anne\", genre:\"F\"} \n    ]\n\n    let addCandidates=[]\n    if (candidates){\n      addCandidates = addCandidates.concat(candidates)\n    }\n\n    for (let i=addCandidates.length; i<number; i++){\n      const randomIndex = Math.floor(Math.random() * names.length)\n      const randomName = names[randomIndex];\n      names.splice(randomIndex, 1);\n      addCandidates.push(new Candidate(randomName.name, this.getRandomType(), randomName.genre))\n    }\n    return addCandidates\n  }\n  \n  getRandomTeamName(){ // à deplacer dans Game principal pour éviter les doublons\n    let names = [\"Takéo\", \"Bolosses\", \"Bokor\", \"Sokka\", \"Lankawaï\", \"Do\", \"Vang\", \"BG\"]\n    return names[Math.floor(Math.random() * names.length)];\n  }\n\n  getRandomType(){\n    let keys = Object.keys(Candidate.TYPE);\n    return Candidate.TYPE[keys[ keys.length * Math.random() << 0]];\n  }\n\n  eliminate(candidate) {\n    if (this.candidates.includes(candidate)) {\n      let eliminatedCandidateIndex = this.candidates.indexOf(candidate)\n      this.candidates.splice(eliminatedCandidateIndex, 1)\n      this.lastEliminated = candidate\n    }\n    this.number = this.candidates.length;\n  }\n  \n  injured(index, candidate) {\n    // console.log(`Denis: Bonjour tribu ${this.name}, j'ai une mauvaise nouvelle à vous annoncer,  ${this.candidates[index].name}, doit abandonner pour raisons médicales c'est donc le ou la dernière éliminé qui prend sa place, c'est à dire ${candidate.name}.`)\n    this.candidates.splice(index, 1);\n    this.candidates.push(candidate)\n  }\n\n  events(semaine, camp){\n    let texts = []\n    if (camp === Team.CAMP.NORMAL && semaine === 1)\n    {\n      texts.push({text: `Denis: C'est le début de l'aventure et l'heure des présentations chez les ${this.name}`, color: Statics.COLORS.DENIS, key: Statics.uniqueKey()})\n      texts.push({text:\"Présentations\", color: Statics.COLORS.INFO, key: Statics.uniqueKey()})\n      texts = texts.concat(this.presentations())\n      return texts;\n    }\n    if (camp === Team.CAMP.VICTOIRE_CONFORT) {\n      texts.push({text: `Denis: De retour sur le camp après que la tribu ${this.name} ai pu profiter de sa récompense`, color: Statics.COLORS.DENIS, key: Statics.uniqueKey()})\n    }\n    else if (camp === Team.CAMP.ECHEC_CONFORT) {\n      texts.push({text: `Denis: Allons maintenant voir du côté des ${this.name} qui reviennent perdant de la dernière épreuve de confort`, color: Statics.COLORS.DENIS, key: Statics.uniqueKey()})\n    }\n    else if (camp === Team.CAMP.VICTOIRE_IMMUNITE) {\n      texts.push({text: `Denis: La tribu ${this.name} a gagné l'épreuve d'immunité, voyons ce qu'il se passe sur leur camps !`, color: Statics.COLORS.DENIS, key: Statics.uniqueKey()})\n    }\n    else if (camp === Team.CAMP.ECHEC_IMMUNITE) {\n      texts.push({text: `Denis: Les ${this.name} reviennent sur le camps et vont devoir affronter le conseil allons faire un tour chez eux !`, color: Statics.COLORS.DENIS, key: Statics.uniqueKey()})\n    }\n    texts = texts.concat(this.randomCampEvent())\n    texts = texts.concat(this.randomCampEvent())\n    if (camp === Team.CAMP.ECHEC_IMMUNITE) {\n      texts.push({text:\"Conseil\", color: Statics.COLORS.INFO, key: Statics.uniqueKey()})\n      texts.push({text: `Denis: C'est l'heure du conseil, les ${this.name} vont devoir décider de l'aventurier dont ils doivent se séparer !`, color: Statics.COLORS.DENIS, key: Statics.uniqueKey()})\n      texts = texts.concat(this.conseil(false))\n    }\n    return texts;\n  }\n\n  conseil(solo) {\n    let texts = []\n    let votesNames =[]\n    let votes =[]\n    for (let candidate of this.candidates)\n    {\n      let vote = candidate.vote(this.candidates.slice(), this.getImmunedCandidates(), this.color)\n      if (vote.text){\n        texts.push(vote.text)\n      }\n      votes.push(vote.vote)\n      votesNames.push(vote.vote.name)\n    }\n    let depouille = Statics.countOccurrences(votesNames)\n    for(let [key, val] of Object.entries(depouille)) {\n      texts.push({text: `Denis: ${val} votes contre vous ${key}`, color: Statics.COLORS.DENIS, key: Statics.uniqueKey()})\n    }\n\n    let eliminatedCandidate = this.mostVoteCandidate(votes)\n    texts.push({text: `Denis: ${eliminatedCandidate.name} prenez votre flambeau, venez me rejoindre`, color: Statics.COLORS.DENIS, key: Statics.uniqueKey()})\n    texts.push({text: `${eliminatedCandidate.name}: Peut être ai-je joué un jeu un peu trop ${eliminatedCandidate.type.typeName}`, color: this.color, key: Statics.uniqueKey()})\n    texts.push({text: `Denis: ${eliminatedCandidate.name} les aventuriers de la tribu ${this.name} ont décidé de vous éliminer, et leur sentence est irrévocable !!!`, color: Statics.COLORS.DENIS, key: Statics.uniqueKey()})\n    this.eliminate(eliminatedCandidate)\n    return texts\n  }\n\n  getLastEliminated() {\n    return this.lastEliminated\n  }\n\n  mostVoteCandidate(array) {\n    if(array.length === 0)\n      return null;\n    let modeMap = {};\n    let maxEl = array[0], maxCount = 1;\n    for(let el of array)\n    {\n      if(modeMap[el.name] === undefined)\n        modeMap[el.name] = 1;\n      else\n        modeMap[el.name]++;  \n      if(modeMap[el.name] > maxCount)\n      {\n        maxEl = el;\n        maxCount = modeMap[el.name];\n      }\n    }\n    return maxEl;\n  }\n  \n  randomCampEvent() {\n    let texts = []\n    let random = Math.random();\n    let event\n    if (random < 0.4) {\n      let index = Math.floor(Math.random() * this.multipleTimesEvents.length)\n      event = this.multipleTimesEvents[index]\n    }\n    else if (random < 0.7) {\n      let index = Math.floor(Math.random() * this.singleTimeEvents.length)\n      event = this.singleTimeEvents[index]\n      this.singleTimeEvents.splice(index, 1);\n    }\n    else if (random < 0.9) {\n      let index = Math.floor(Math.random() * this.rareMultipleTimesEvents.length)\n      event = this.rareMultipleTimesEvents[index]\n    }\n    else {\n      let index = Math.floor(Math.random() * this.rareSingleTimeEvents.length)\n      event = this.rareSingleTimeEvents[index]\n      this.rareSingleTimeEvents.splice(index, 1);\n    }\n\n    texts = texts.concat(this.happening(event))\n    return texts\n  }\n\n  happening(event) {\n    let texts = []\n    const EVENT = Statics.EVENT\n    let candidate = Statics.randomArray(this.candidates)\n    switch (event) {\n      case EVENT.INJURED:\n        break;\n      case EVENT.FOUND_WATER:\n        texts.push({text: `${candidate.name}: J'ai trouvé l'eau !!!!!!`, color: this.color, key: Statics.uniqueKey()})\n        texts.push({text: `Denis: AH ! ${candidate.name} a trouvé l'eau chez les ${this.name} voilà qui va leur faire du bien !`, color: Statics.COLORS.DENIS, key: Statics.uniqueKey()})\n        break;\n      case EVENT.FOUND_ALCOHOL:\n        texts.push({text: `${candidate.name}: J'ai trouvé l'eau !!!!!! Enfin j'ai trouvé des bières mais l'alcohol c'est de l'eau pas vrai !`, color: this.color, key: Statics.uniqueKey()})\n        if (!this.singleTimeEvents.includes(EVENT.FOUND_WATER)) {\n          texts.push({text: `Denis: AH ! Visiblement ${candidate.name} est amnésique en plus d'être alcoolique car l'eau avait déjà été trouvé ...`, color: Statics.COLORS.DENIS, key: Statics.uniqueKey()})\n          texts.push({text: `${candidate.name}: Je vais enfin pouvoir arrêter de boire mon urine !`, color: this.color, key: Statics.uniqueKey()})\n          texts.push({text: `Denis: ... ah  ...`, color: Statics.COLORS.DENIS, key: Statics.uniqueKey()})\n        }\n        break;\n      case EVENT.MADE_FIRE:\n        texts.push({text: `${candidate.name}: J'ai fait le feu !!! Je savais que ça servirait d'être ${candidate.type.typeName}`, color: this.color, key: Statics.uniqueKey()})\n        texts.push({text: `Denis: ${candidate.name} a réussi a faire le feu, prouesse remarquable chez les ${this.name} voilà qui va réchauffer leur coeurs !`, color: Statics.COLORS.DENIS, key: Statics.uniqueKey()})\n        this.rareSingleTimeEvents.push(EVENT.STOP_FIRE)\n        this.lovedByEverybody(candidate)\n        break;\n      case EVENT.STOP_FIRE:\n        texts.push({text: `${candidate.name}: POUR JOSEEEEEEEEPPHHHHHHHHHHHHHHHH !!!!!!!!`, color: this.color, key: Statics.uniqueKey()})\n        texts.push({text: `Denis: Impossible ! ${candidate.name} vient tout juste d'éteindre le précieux feu dans la tribu ${this.name} du presque jamais vu dans Koh-Lantah !`, color: Statics.COLORS.DENIS, key: Statics.uniqueKey()})\n        this.rareSingleTimeEvents.push(EVENT.MADE_FIRE)\n        this.hatedByEverybody(candidate)\n        break;\n      case EVENT.COLLIER:\n        texts.push({text: `${candidate.name}: shhhhhhshhshhshshhhh ... je viens de trouver un collier d'immunité ...!!  Ok je vais devoir le cacher avant de rentrer au camps`, color: this.color, key: Statics.uniqueKey()})\n        texts.push({text: `Denis: Grâce aux zooms de notre caméraman sur l'arbre ou il était caché, ${candidate.name}, qu'on qualifie souvent de ${candidate.type.typeName} a trouvé un collier !`, color: Statics.COLORS.DENIS, key: Statics.uniqueKey()})\n        candidate.addItem(\"collier\")\n        break;\n      case EVENT.DISPUTE:\n        texts.push({text: `${candidate.name}: Vas y je sais pas pourquoi mais je suis enervé là`, color: this.color, key: Statics.uniqueKey()})\n        break;\n      case EVENT.AMITIE:\n        texts.push({text: `${candidate.name}: Je me sens de bonne humeur aujourd'hui`, color: this.color, key: Statics.uniqueKey()})\n        break;\n      case EVENT.DROLE:\n        texts.push({text: `${candidate.name}: Les gars j'ai une blague !`, color: this.color, key: Statics.uniqueKey()})\n        texts.push({text: Statics.replaceDialogueSolo(candidate, Statics.randomArray(Statics.JOKES)), color: this.color, key: Statics.uniqueKey()})\n        break;\n      case EVENT.MANIOK:\n        texts.push({text: `${candidate.name}: J'ai trouvé le maniok mes amis, grâce à Jésus nous n'auront plus jamais faim !`, color: this.color, key: Statics.uniqueKey()})\n        this.updateFaims(-2)\n        break;\n      case EVENT.PECHE:\n        texts.push({text: `${candidate.name}: LES GARS !! J'ai réussi j'ai un poisson ! Ce soir on va se faire un festin de ouf.`, color: this.color, key: Statics.uniqueKey()})\n        this.updateFaims(-5)\n        break;\n      case EVENT.PLUIE:\n        texts.push({text: `${candidate.name}: Attention il arrête pas de pleuvoir je sais pas si vous avez remarqué !`, color: this.color, key: Statics.uniqueKey()})\n        break;\n      case EVENT.CABANE:\n        texts.push({text: `${candidate.name}: Et voilà j'ai fait la cabane yes !`, color: this.color, key: Statics.uniqueKey()})\n        this.rareSingleTimeEvents.push(EVENT.CABANE_DESTRUCTED)\n        break;\n      case EVENT.CABANE_DESTRUCTED:\n        texts.push({text: `${candidate.name}: Et voilà j'ai détruit la cabane yes !`, color: this.color, key: Statics.uniqueKey()})\n        this.singleTimeEvents.push(EVENT.CABANE)\n        this.hatedByEverybody(candidate)\n        break;\n      case EVENT.COMPLOT:\n        texts.push({text: `${candidate.name}: Ouais je vais tenter de monter un petit complot là faut commencer à faire des alliances !`, color: this.color, key: Statics.uniqueKey()})\n        break;\n      case EVENT.TRISTE:\n        texts.push({text: `${candidate.name}: Je suis triste ma famille me manque ça fait tellement longtemps que je les ai pas vu !`, color: this.color, key: Statics.uniqueKey()})\n        break;\n      default:\n        break;\n    }\n  \n    return texts\n  }\n\n  presentations(){\n    let tmpCandidates = this.candidates.slice(); // avoid referencing, it just copy the list\n    let texts = []\n    while (tmpCandidates.length) {\n      if (tmpCandidates.length === 1) {\n        texts.push({text: Statics.replaceDialogueSolo(tmpCandidates[0], Statics.randomArray(Statics.PRESENTATION3[tmpCandidates[0].genre])), color: this.color, key: Statics.uniqueKey()})\n        texts.push({text: `Denis: Début d'aventure compliqué pour ${tmpCandidates[0].name} qui se fait bolosser par son équipe`, color: Statics.COLORS.DENIS, key: Statics.uniqueKey()})\n        tmpCandidates=[]\n      }\n      else {\n        let randomIndex = Math.floor(Math.random() * tmpCandidates.length)\n        let randomCandidate = tmpCandidates[randomIndex];\n        tmpCandidates.splice(randomIndex, 1);\n\n        randomIndex = Math.floor(Math.random() * tmpCandidates.length)\n        let randomCandidate2 = tmpCandidates[randomIndex];\n        tmpCandidates.splice(randomIndex, 1);\n\n        texts.push({text: Statics.replaceDialogue(randomCandidate, randomCandidate2, Statics.randomArray(Statics.PRESENTATION1[randomCandidate.genre])), color: this.color, key: Statics.uniqueKey()})\n        texts.push({text: Statics.replaceDialogue(randomCandidate, randomCandidate2, Statics.randomArray(Statics.PRESENTATION2[randomCandidate.genre])), color: this.color, key: Statics.uniqueKey()})\n\n        randomCandidate.addFriend(randomCandidate2)\n        randomCandidate2.addFriend(randomCandidate)\n\n        texts.push({text:\"Dialogue\", color: Statics.COLORS.INFO, key: Statics.uniqueKey()})\n      }\n    }\n    return texts;\n  }\n\n  getTotalOfCompetence(competence, nb_participants){\n    let total = 0\n    for (let candidate of this.candidates){\n      total += candidate.getCompetence(competence)\n    }\n    total = total / this.candidates.length * nb_participants\n    return total\n  }\n\n  getWeakestFromCompetence(competence){\n    let weakest = this.candidates[0]\n    for (let candidate of this.candidates) {\n      if (candidate.getCompetence(competence) < weakest.getCompetence(competence)) {\n        weakest = candidate\n      }\n    }\n    return weakest\n  }\n\n  getStrongestFromCompetence(competence){\n    let strongest = this.candidates[0]\n    for (let candidate of this.candidates) {\n      if (candidate.getCompetence(competence) > strongest.getCompetence(competence)) {\n        strongest = candidate\n      }\n    }\n    return strongest\n  }\n\n  getStrongestFromFatigue(){\n    let strongest = this.candidates[0]\n    for (let candidate of this.candidates) {\n      if (candidate.getFatigue() < strongest.getFatigue()) {\n        strongest = candidate\n      }\n    }\n    return strongest\n  }\n\n  getWeakestFromFatigue(){\n    let weakest = this.candidates[0]\n    for (let candidate of this.candidates) {\n      if (candidate.getFatigue() < weakest.getFatigue()) {\n        weakest = candidate\n      }\n    }\n    return weakest\n  }\n\n  congrats(competence) {\n    let candidate = Statics.randomArray(this.candidates)\n    let congratulatedCandidate = this.getStrongestFromCompetence(competence)\n    let texts = []\n    if (congratulatedCandidate === candidate){\n        texts.push({text: Statics.replaceDialogueSolo(candidate, Statics.randomArray(Statics.TEAM_CONGRATS_SOLO[candidate.genre]), competence), color: this.color, key: Statics.uniqueKey()})\n    }\n    else {\n        texts.push({text: Statics.replaceDialogue(candidate, congratulatedCandidate, Statics.randomArray(Statics.TEAM_CONGRATS[candidate.genre]), competence), color: this.color, key: Statics.uniqueKey()})\n        candidate.addFriend(congratulatedCandidate)\n    }\n\n    return texts\n  }\n\n  shame(competence) {\n    let candidate = Statics.randomArray(this.candidates)\n    let shamedCandidate = this.getWeakestFromCompetence(competence)\n    let texts = []\n    if (shamedCandidate === candidate){\n        texts.push({text: Statics.replaceDialogueSolo(candidate, Statics.randomArray(Statics.TEAM_SHAME_SOLO[candidate.genre]), competence), color: this.color, key: Statics.uniqueKey()})\n    }\n    else {\n        texts.push({text: Statics.replaceDialogue(candidate, shamedCandidate, Statics.randomArray(Statics.TEAM_SHAME[candidate.genre]), competence), color: this.color, key: Statics.uniqueKey()})\n        candidate.addEnnemy(shamedCandidate)\n    }\n\n    return texts\n  }\n\n  updateFatigues(unite) {\n    for (let candidate of this.candidates) {\n      candidate.updateFatigue(unite)\n    }\n  }\n\n  updateFaims(unite) {\n    for (let candidate of this.candidates) {\n      candidate.updateFaim(unite)\n    }\n  }\n\n  hatedByEverybody(hatedCandidate){\n    for (let candidate of this.candidates){\n      if (candidate !== hatedCandidate)\n        candidate.addEnnemy(hatedCandidate)\n    }\n  }\n\n  lovedByEverybody(lovedCandidate){\n    for (let candidate of this.candidates){\n      if (candidate !== lovedCandidate)\n        candidate.addFriend(lovedCandidate)\n    }\n  }\n  getImmunedCandidates() {\n    let candidates = []\n    for (let candidate of this.candidates) {\n      if (candidate.immunity) {\n        candidates.push(candidate)\n      }\n    }\n    return candidates\n  }\n}\n \n","import ReactGa from 'react-ga';\nimport Team from './Team'\nimport Statics from './Statics'\nexport default class Game {\n\n  static numberDisplay = 10\n  constructor({name=\"spéciale\", team1=undefined, team2=undefined}){\n    this.name = name\n    this.team1 = team1 || new Team({color: \"#fa4e65\"})\n    this.team2 = team2 || new Team({color: \"#d7c490\"})\n    this.team3 = undefined\n    this.semaine = 1\n    this.solo = false\n    this.continue = true\n    this.eliminates = []\n    this.currentText = []\n    this.currentTextIndex = Game.numberDisplay\n    this.weekText = []\n    this.team1DisplayCandidates = this.team1.candidates.slice()\n    this.team2DisplayCandidates = this.team2.candidates.slice()\n    this.team3DisplayCandidates = []\n    this.displaySolo = false\n  }\n\n  presentation(){\n    // console.log(`Bonjour et bienvenue dans cette nouvelle édition ${this.name} de Koh-Lanta qui oposera la tribu ${this.team1.name} à la tribu ${this.team2.name}`)\n  }\n\n  week() {\n    let texts = []\n    if (this.solo && (this.team3.candidates.length) < 5) {\n      texts = texts.concat(this.final(this.team3))\n      // for (let text of texts) {\n        // console.log(`%c ${text.text}`, `color: ${text.color}`);\n      // }\n      return texts \n    }\n\n    texts.push({text: \"Vie sur le camps\", color: Statics.COLORS.INFO, key: Statics.uniqueKey()})\n    texts.push({text: `Denis:  Allons voir comment se porte la vie sur le camps pour nos candidats qui commencent leur semaine ${this.semaine}`, color: Statics.COLORS.DENIS, key: Statics.uniqueKey()})\n    if (!this.solo) {\n      texts = texts.concat(this.team1.events(this.semaine, Team.CAMP.NORMAL))\n      texts = texts.concat(this.team2.events(this.semaine, Team.CAMP.NORMAL))\n      texts = texts.concat(this.epreuveEquipes(\"confort\"))\n      texts = texts.concat(this.epreuveEquipes(\"immunité\"))\n    }\n    else {\n      texts = texts.concat(this.team3.events(this.semaine, Team.CAMP.NORMAL))\n      texts = texts.concat(this.epreuveSolo(\"confort\"))\n      texts = texts.concat(this.epreuveSolo(\"immunité\"))\n    }\n    this.semaine++\n    if (!this.solo && (this.team1.candidates.length + this.team2.candidates.length) < 8) {\n      this.solo = true;\n      texts.push({text: `Denis: AH ! L'heure de la réunification est venue ! Nos deux tribus n'en formeront qu'une seule, la tribu blanche !`, color: Statics.COLORS.DENIS})\n      let team3Candidates = this.team1.candidates.concat(this.team2.candidates)\n      this.team3 = new Team({name: \"Réunifiés\", candidates: team3Candidates, color: \"#000000\"})    }\n    // for (let text of texts) {\n      // console.log(`%c ${text.text}`, `color: ${text.color}`);\n    // }\n    return texts;\n  }\n\n  epreuveEquipes(type){\n    let texts = []\n    let epreuve = Statics.randomEpreuve()\n\n    if (type === \"confort\"){\n      texts.push({text: \"Epreuve de confort\", color: Statics.COLORS.INFO, key: Statics.uniqueKey()})\n      texts.push({text: `Denis: L'épreuve de confort d'aujourd'hui est : ${epreuve.name} ! Pour gagner fiez vous à votre ${epreuve.type} !`, color: Statics.COLORS.DENIS, key: Statics.uniqueKey()})\n    }\n    if (type === \"immunité\"){\n      texts.push({text: \"Epreuve d'immunité\", color: Statics.COLORS.INFO, key: Statics.uniqueKey()})\n      texts.push({text: `Denis: Nous y voici, c'est l'heure de l'épreuve d'immunité : ${epreuve.name} ! Votre seul chance de gagner aujourd'hui, faire preuve de ${epreuve.type} ! GO !`, color: Statics.COLORS.DENIS, key: Statics.uniqueKey()})\n    }\n    let winnerTeam = this.winnerEquipes(this.team1, this.team2, epreuve)\n    let loserTeam; \n    texts.push({text: `Denis: AH ! L'équipe des ${winnerTeam.name} remporte l'épreuve ${epreuve.name} !`, color: Statics.COLORS.DENIS, key: Statics.uniqueKey()})\n    texts = texts.concat(winnerTeam.congrats(epreuve.type))\n    this.team1.updateFatigues(epreuve.fatigue)\n    this.team2.updateFatigues(epreuve.fatigue)\n    if (this.team1 !== winnerTeam) {\n      texts = texts.concat(this.team1.shame(epreuve.type))\n      loserTeam = this.team1\n    }\n    else {\n      texts = texts.concat(this.team2.shame(epreuve.type))\n      loserTeam = this.team2\n    }\n    if (type === \"confort\"){\n      loserTeam.updateFaims(5)\n      texts.push({text: `Denis: Bravo les ${winnerTeam.name} vous allez pouvoir profiter de la récompense pendant que les autres auront grave le seum`, color: Statics.COLORS.DENIS, key: Statics.uniqueKey()})\n      texts.push({text: \"Vie sur le camps\", color: Statics.COLORS.INFO, key: Statics.uniqueKey()})\n      texts = texts.concat(winnerTeam.events(this.semaine, Team.CAMP.VICTOIRE_CONFORT))\n      texts.push({text: \"Vie sur le camps\", color: Statics.COLORS.INFO, key: Statics.uniqueKey()})\n      texts = texts.concat(loserTeam.events(this.semaine, Team.CAMP.ECHEC_CONFORT))\n    }\n    if (type === \"immunité\") {\n      texts.push({text: `Denis: Bravo les ${winnerTeam.name} vous allez pouvoir rentrer sur le camps serein je vous remets le totem`, color: Statics.COLORS.DENIS, key: Statics.uniqueKey()})\n      texts.push({text: \"Vie sur le camps\", color: Statics.COLORS.INFO, key: Statics.uniqueKey()})\n      texts = texts.concat(winnerTeam.events(this.semaine, Team.CAMP.VICTOIRE_IMMUNITE))\n      texts.push({text: \"Vie sur le camps\", color: Statics.COLORS.INFO, key: Statics.uniqueKey()})\n      texts = texts.concat(loserTeam.events(this.semaine, Team.CAMP.ECHEC_IMMUNITE))\n      this.eliminates.push(loserTeam.getLastEliminated())\n    \n    }\n\n    return texts\n  \n  }\n\n  winnerEquipes(team1, team2, epreuve) {\n    // one day use boule noir to remove some members of the team\n    let nb_participants = Math.min(team1.candidates.length, team2.candidates.length)\n    if (team1.getTotalOfCompetence(epreuve.type, nb_participants) > team2.getTotalOfCompetence(epreuve.type, nb_participants)){\n      return team1;\n    }\n    return team2;\n  }\n\n  epreuveSolo(type){\n    let texts = []\n    let epreuve = Statics.randomEpreuve()\n\n    if (type === \"confort\"){\n      texts.push({text: \"Epreuve de confort\", color: Statics.COLORS.INFO, key: Statics.uniqueKey()})\n      texts.push({text: `Denis: L'épreuve de confort d'aujourd'hui est : ${epreuve.name} ! Pour gagner fiez vous à votre ${epreuve.type} !`, color: Statics.COLORS.DENIS, key: Statics.uniqueKey()})\n    }\n    if (type === \"immunité\"){\n      texts.push({text: \"Epreuve d'immunité\", color: Statics.COLORS.INFO, key: Statics.uniqueKey()})\n      texts.push({text: `Denis: Nous y voici, c'est l'heure de l'épreuve d'immunité : ${epreuve.name} ! Votre seul chance de gagner aujourd'hui, faire preuve de ${epreuve.type} ! GO !`, color: Statics.COLORS.DENIS, key: Statics.uniqueKey()})\n    }\n    let winner = this.team3.getStrongestFromCompetence(epreuve.type)\n    texts.push({text: `Denis: AH ! ${winner.name} remporte l'épreuve ${epreuve.name} !`, color: Statics.COLORS.DENIS, key: Statics.uniqueKey()})\n\n    if (type === \"confort\"){\n      this.team3.updateFaims(5) // exclure le gagnant\n      texts.push({text: \"Vie sur le camps\", color: Statics.COLORS.INFO, key: Statics.uniqueKey()})\n      texts = texts.concat(this.team3.events(this.semaine, Team.CAMP.CAMP_NORMAL))\n    }\n    if (type === \"immunité\") {\n      texts.push({text: \"Vie sur le camps\", color: Statics.COLORS.INFO, key: Statics.uniqueKey()})\n      texts.push({text: `Denis: ${winner.name} vous êtes immunisé pour le conseil de ce soir, je vous remets le totem !`, color: Statics.COLORS.DENIS, key: Statics.uniqueKey()})\n      winner.immune()\n      texts = texts.concat(this.team3.events(this.semaine, Team.CAMP.ECHEC_IMMUNITE))\n      winner.notImmune()\n      this.eliminates.push(this.team3.getLastEliminated())\n    }\n\n    return texts\n  \n  }\n\n  final(team) {\n    let texts = []\n    texts.push({text: \"FINALE\", color: Statics.COLORS.INFO, key: Statics.uniqueKey()})\n    texts.push({text: \"AH! C'est l'heure de la grand finale !! Nos quatres derniers candidats sont :\", color: Statics.COLORS.DENIS, key: Statics.uniqueKey()})\n    for (let candidate of team.candidates){\n      texts.push({text: `${candidate.name} !`, color: Statics.COLORS.DENIS, key: Statics.uniqueKey()})\n    }\n    texts = texts.concat(this.orientation(team))\n    texts = texts.concat(this.poteaux(team))\n    this.continue = false\n    return texts\n  }\n\n  orientation(team) {\n    let texts = []\n    texts.push({text: \"Commençons par l'épreuve d'orientation !!\", color: Statics.COLORS.INFO, key: Statics.uniqueKey()})\n    let loser = team.getWeakestFromFatigue()\n    texts.push({text: `${loser.name} perd`, color: Statics.COLORS.INFO, key: Statics.uniqueKey()})\n    team.eliminate(loser)\n    return texts\n  }\n\n  poteaux(team) {\n    let texts = []\n    texts.push({text: \"C'est l'heure des poteaux\", color: Statics.COLORS.INFO, key: Statics.uniqueKey()})\n    let winner = team.getStrongestFromFatigue()\n    texts.push({text: `${winner.name} gagne KOH LANTAH !!!!!!`, color: Statics.COLORS.INFO, key: Statics.uniqueKey()})\n    team.candidates = [winner]\n    return texts\n  }\n\n  getCurrentText() {\n    if (!this.continue) {\n      this.team3DisplayCandidates = this.team3.candidates.slice()\n      this.currentText = this.weekText.slice(this.weekText.length - Game.numberDisplay, this.weekText.length)\n      ReactGa.event({\n        category:'Button',\n        action: 'End of simulation'\n      })\n      return this.currentText\n    }\n    if (this.currentText.length < Game.numberDisplay) {\n      this.displaySolo = this.solo\n      if (this.solo && this.team3) {\n        this.team3DisplayCandidates = this.team3.candidates.slice()\n      }\n      else {\n        this.team1DisplayCandidates = this.team1.candidates.slice()\n        this.team2DisplayCandidates = this.team2.candidates.slice()\n      }\n      this.weekText = this.currentText.concat(this.week())\n      this.currentTextIndex = Game.numberDisplay\n    }\n    this.currentText = this.weekText.slice(this.currentTextIndex - Game.numberDisplay, this.currentTextIndex)\n    this.currentTextIndex+=4\n    return this.currentText\n  }\n\n  getTeam1DisplayCandidates () {\n    return this.team1DisplayCandidates\n  }\n\n  getTeam2DisplayCandidates () {\n    return this.team2DisplayCandidates\n  }\n\n  getTeam3DisplayCandidates () {\n    return this.team3DisplayCandidates\n  }\n\n  getDisplaySolo () {\n    return this.displaySolo\n  }\n}\n","import React from 'react';\nimport { Transition, animated } from 'react-spring/renderprops'\n\nconst defaultStyles = {\n  overflow: 'hidden',\n  width: '100%',\n  color: 'white',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  fontSize: '20px',\n  border: '1px solid',\n  borderRadius: '16px',\n  height: 'max-content',\n  padding: 5,\n}\n\nexport default class TextGame extends React.PureComponent {\n  scrollToBottom = () => {\n    setTimeout(() => this.messagesEnd.scrollIntoView({ behavior: \"smooth\" }), 150);\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  render() {\n    return (\n      <div className=\"overflow-auto\" style={{ height: \"80vh\"}}>\n        <Transition\n          items={this.props.texts} keys={item => item.key}\n          //initial={null}\n          from={{ overflow: 'hidden', opacity: 0 }}\n          enter={{ opacity: 1}}\n          leave={{ opacity: 1}}\n          >\n          {item => styles => (\n            <animated.div style={{background:item.color,...defaultStyles }}>\n              {item.text}\n            </animated.div>\n          )}\n        </Transition>\n         <div style={{ float:\"left\", clear: \"both\" }}\n                     ref={(el) => { this.messagesEnd = el; }}>\n         </div>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nclass GameComponent extends React.Component {\n\n    render() {\n\t\tconst candidates = []\n\t\tif (this.props.candidates) {\n\t\t\tfor (let candidate of this.props.candidates) {\n\t\t\t\tcandidates.push(<ListGroup.Item key={`${candidate.name}+${candidate.type.typeName}`}>{candidate.name}</ListGroup.Item>)\n\t\t\t}\n\t\t}\n\t\t\n        return (\n          <Container className=\"mb-2\">\n\t\t\t<h1 className=\"text-white text-center text-stroke\" style={{background: this.props.team.color}}>{this.props.team.name}</h1>\n\t\t\t<ListGroup>\n\t\t\t{candidates}\n\t\t\t</ListGroup>\n          </Container>\n        );\n    }\n}\n\nexport default GameComponent;\n","import React from 'react';\nimport ReactGa from 'react-ga';\nimport {isMobile} from 'react-device-detect';\nimport Game from '../classes/Game';\nimport Team from '../classes/Team';\nimport TextGame from './TextGame';\nimport TeamComponent from './TeamComponent';\n\nimport { Row, Col, Button } from 'react-bootstrap';\n\nclass GameComponent extends React.Component {\n    constructor(props){\n      super(props);\n      this.state = {texts : [], disabledNext: false}\n      this.next = this.next.bind(this);\n  }\n\n  componentDidMount(){\n    let team1 = new Team({name: this.props.team1Name, color: this.props.team1Color, number: this.props.numberCandidates, candidates: this.props.team1Candidates})\n    let team2 = new Team({name: this.props.team2Name, color: this.props.team2Color, number: this.props.numberCandidates, candidates: this.props.team2Candidates})\n    this.game = new Game({team1: team1, team2: team2})\n    this.setState({ texts: this.game.getCurrentText()})\n    this.setState({ team1: this.game.team1})\n    this.setState({ team2: this.game.team2})\n    this.setState({ candidatesTeam1: this.game.getTeam1DisplayCandidates()})\n    this.setState({ candidatesTeam2: this.game.getTeam2DisplayCandidates()})\n    this.setState({ candidatesTeam3: this.game.getTeam3DisplayCandidates()})\n    this.setState({ solo: this.game.getDisplaySolo()})\n  }\n  \n  next() {\n    this.setState({disabledNext: true})\n    setTimeout(() => this.setState({disabledNext: false}) , 500);\n    this.setState({ texts: this.game.getCurrentText()})\n    this.setState({ candidatesTeam1: this.game.getTeam1DisplayCandidates()})\n    this.setState({ candidatesTeam2: this.game.getTeam2DisplayCandidates()})\n    this.setState({ candidatesTeam3: this.game.getTeam3DisplayCandidates()})\n    if (!this.state.team3)\n      this.setState({ team3: this.game.team3})\n    this.setState({ solo: this.game.getDisplaySolo()})\n\tReactGa.event({\n\t\tcategory:'Button',\n\t\taction: 'Next step simulation'\n\t})\n  }\n\n    render() {\n        return (\n            <Row>\n              <Col>\n              {this.state.candidatesTeam1 && !this.state.solo && !isMobile?\n                  <TeamComponent candidates={this.state.candidatesTeam1} team={this.state.team1}/>\n              :\n                  null\n              }\n              {this.state.candidatesTeam2 && !this.state.solo && !isMobile ?\n                  <TeamComponent candidates={this.state.candidatesTeam2} team={this.state.team2}/>\n              :\n                  null\n              }\n              {this.state.candidatesTeam3 && this.state.solo && !isMobile ?\n                  <TeamComponent candidates={this.state.candidatesTeam3} team={this.state.team3}/>\n              :\n                  null\n              }\n              </Col>\n              <Col md={8}>\n                <TextGame texts={this.state.texts}/>\n\t\t\t  <Button className=\"mt-1\" onClick={this.next} disabled={this.state.disabledNext} variant=\"primary\">\n                Suivant\n\t\t\t  </Button>\n              </Col>\n            </Row>\n        );\n    }\n}\n\nexport default GameComponent;\n","import React from 'react';\nimport { SliderPicker } from 'react-color';\nimport ReactGa from 'react-ga';\n\nimport Form from 'react-bootstrap/Form'\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Alert from 'react-bootstrap/Alert'\n\nimport GameComponent from './GameComponent';\nimport Candidate from '../classes/Candidate';\n\n\nclass FormComponent extends React.Component {\n    constructor(props){\n      super(props);\n\t  this.state = {\n\t\tnumberCandidates: 5,\n\t\tfilling: true,\n\t\tstep: 1,\n\t\tteam1Candidates: undefined,\n\t\tteam2Candidates: undefined,\n\t\tteam1Name: undefined,\n\t\tteam2Name: undefined,\n\t\tteam1Color: '#fa4e65',\n\t\tteam2Color: '#d7c490',\n\t\tteams: {\n\t\t  team1: null,\n\t\t  team2: null,\n\t\t}\n\t  }\n\tthis.handleChange = this.handleChange.bind(this);\n\tthis.handleChangeCandidate = this.handleChangeCandidate.bind(this);\n\tthis.handleSubmit = this.handleSubmit.bind(this);\n\tthis.handleStep = this.handleStep.bind(this);\n\tthis.getCandidatesFromDic = this.getCandidatesFromDic.bind(this);\n  }\n\n  componentDidMount(){\n  }\n\n  handleChange(event) {\n\tthis.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleChangeTeam1ColorDrag = (color) => {\n\tthis.setState({ team1Color: color.hex });\n  }\n\n  handleChangeTeam2ColorDrag = (color) => {\n\tthis.setState({ team2Color: color.hex });\n  }\n\n  handleChangeTeam1Color = (color) => {\n\tthis.setState({ team1Color: color.hex });\n  }\n\n  handleChangeTeam2Color = (color) => {\n\tthis.setState({ team2Color: color.hex });\n  }\n\n  handleChangeCandidate(team, candidate, event) {\n\tthis.setState({\n\t  teams: {\n\t\t[`team${team}`]: {\n\t\t  ...this.state.teams[`team${team}`],\n\t\t  [`candidate${candidate}`]: {\n\t\t\t...this.state.teams[`team${team}`][`candidate${candidate}`] || null,\n\t\t\t[event.target.name]: event.target.value }\n\t\t}\n\t  }\n\t});\n  }\n\n  handleSubmit(event) {\n\tthis.setState({team1Candidates: this.getCandidatesFromDic(this.state.teams.team1)})\n\tthis.setState({team2Candidates: this.getCandidatesFromDic(this.state.teams.team2)})\n\tthis.setState({filling: false})\n\tReactGa.event({\n\t\tcategory:'Button',\n\t\taction: 'Launched simulation'\n\t})\n  }\n\n  getCandidatesFromDic(dic) {\n\tlet candidates = []\n\tlet dicKeys = null\n\tif (dic) {\n\t  dicKeys = Object.keys(dic)\n\t  for (let candidate of dicKeys) {\n\t\tif (dic[candidate] && dic[candidate].name) {\n\t\t  candidates.push(new Candidate(dic[candidate].name, Candidate.TYPE[dic[candidate].type], dic[candidate].genre))\n\t\t}\n\t  }\n\t  if (candidates.length) {\n\t\treturn candidates\n\t  }\n\t}\n\treturn undefined\n  }\n\n  handleStep(event) {\n\tthis.setState({step: 2})\n\tfor (let i=0; i < this.state.numberCandidates; i++) {\n\t  this.setState({\n\t\tteams:\n\t\t{\n\t\t  team1:\n\t\t  {\n\t\t  ...this.state.teams.team1,\n\t\t\t[`candidate${i}`]: null\n\t\t  },\n\t\t  team2:\n\t\t  {\n\t\t  ...this.state.teams.team2,\n\t\t\t[`candidate${i}`]: null\n\t\t  }\n\t\t}\n\t  })\n\t}\n\tReactGa.event({\n\t\tcategory:'Button',\n\t\taction: 'Started form'\n\t})\n  }\n  \n    render() {\n\t  const types = []\n  \t  const typeKeys = Object.keys(Candidate.TYPE)\n      for (let i=0; i < typeKeys.length; i++) {\n\t\ttypes.push(<option key={`type${i}`} value={typeKeys[i]}>{Candidate.TYPE[typeKeys[i]].typeName}</option>)\n\t  }\n\t  const team1Form = []\n\t  const team2Form = []\n\t  for (let i=0; i<this.state.numberCandidates; i++) {\n\t\tteam1Form.push(\n\t\t\t<Row key={i} onChange={(e) => this.handleChangeCandidate(1, i, e)}>\n\t\t\t  <Col className=\"mb-3\">\n\t\t\t\t<Form.Control name={`name`} placeholder=\"Nom\" maxLength=\"25\"/>\n\t\t\t  </Col>\n\t\t\t  <Col>\n\t\t\t\t<Form.Control as=\"select\" name={`genre`}>\n\t\t\t\t  <option value=\"H\">Homme</option>\n\t\t\t\t  <option value=\"F\">Femme</option>\n\t\t\t\t</Form.Control>\n\t\t\t  </Col>\n\t\t\t  <Col>\n\t\t\t\t<Form.Control as=\"select\" name={`type`}>\n\t\t\t\t\t{types}\n\t\t\t\t</Form.Control>\n\t\t\t  </Col>\n\t\t\t</Row>\n\t\t\t)\n\t\tteam2Form.push(\n\t\t\t<Row key={i} onChange={(e) => this.handleChangeCandidate(1, i, e)}>\n\t\t\t  <Col className=\"mb-3\">\n\t\t\t\t<Form.Control name={`name`} placeholder=\"Nom\" maxLength=\"25\"/>\n\t\t\t  </Col>\n\t\t\t  <Col>\n\t\t\t\t<Form.Control as=\"select\" name={`genre`}>\n\t\t\t\t  <option value=\"H\">Homme</option>\n\t\t\t\t  <option value=\"F\">Femme</option>\n\t\t\t\t</Form.Control>\n\t\t\t  </Col>\n\t\t\t  <Col>\n\t\t\t\t<Form.Control as=\"select\" name={`type`}>\n\t\t\t\t\t{types}\n\t\t\t\t</Form.Control>\n\t\t\t  </Col>\n\t\t\t</Row>\n\t\t\t)\n\t  }\n        return (\n          <Container>\n\t\t  {this.state.filling ?\n\t\t  <div>\n\t\t  {this.state.step === 1 ?\n\t\t\t<Form>\n\t\t\t  <Alert variant=\"info\">\n\t\t\t\t  <Alert.Heading className=\"text-center\">L'AVENTURE COMMENCE</Alert.Heading>\n\t\t\t\t  <p>Bienvenue dans la version bêta de Koh-Lanta Simulator, n'hésitez pas à partager votre avis et votre expérience dans la partie contact</p>\n\t\t\t</Alert>\n\t\t\t  <Form.Group as={Row} controlId=\"numberCandidate\" className=\"justify-content-md-center\">\n\t\t\t\t<Form.Label column sm=\"3\">Nombre de candidats par équipe</Form.Label>\n\t\t\t\t\t <Col sm=\"2\">\n\t\t\t\t\t\t <Form.Control as=\"select\" name=\"numberCandidates\" onChange={this.handleChange}>\n\t\t\t\t\t\t\t <option value=\"5\">5</option>\n\t\t\t\t\t\t\t <option value=\"6\">6</option>\n\t\t\t\t\t\t\t <option value=\"7\">7</option>\n\t\t\t\t\t\t\t <option value=\"8\">8</option>\n\t\t\t\t\t\t\t <option value=\"9\">9</option>\n\t\t\t\t\t\t </Form.Control>\n\t\t\t\t\t </Col>\n\t\t\t  </Form.Group>\n\t\t\t  <Button onClick={this.handleStep} variant=\"primary\">\n\t\t\t  Suivant\n\t\t\t  </Button>\n\t\t\t</Form>\n\t\t\t:\n\t\t\t<Form>\n\t\t\t  <Alert variant=\"info\">\n\t\t\t\t  <Alert.Heading className=\"text-center\">INFORMATION</Alert.Heading>\n\t\t\t\t  <p>Tous les noms laissés vides seront attribués aléatoirement (même le nom de équipes) vous n'avez aucune obligation de tout remplir pour lancer la simulation</p>\n\t\t\t</Alert>\n\t\t\t\t<Row className=\"align-items-center justify-content-center\">\n\t\t\t\t\t<Col className=\"mb-3\">\n\t\t\t\t\t\t<h1 className=\"text-white text-center text-stroke\" style={{background: this.state.team1Color}}> TRIBU 1 </h1>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row className=\"align-items-center justify-content-center\">\n\t\t\t\t\t<Col className=\"mb-3\">\n\t\t\t\t\t\t<Form.Control name={`team1Name`} placeholder=\"Nom de l'équipe\" maxLength=\"25\" onChange={this.handleChange}/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col className=\"mb-3\">\n\t\t\t\t\t\t<SliderPicker color={ this.state.team1Color } onChange={ this.handleChangeTeam1ColorDrag }onChangeComplete={ this.handleChangeTeam1Color }/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t{team1Form}\n\t\t\t\t<Row className=\"align-items-center justify-content-center\">\n\t\t\t\t\t<Col className=\"mb-3\">\n\t\t\t\t\t\t<h1 className=\"text-white text-center text-stroke\" style={{background: this.state.team2Color}}> TRIBU 2 </h1>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row className=\"align-items-center justify-content-center\">\n\t\t\t\t\t<Col className=\"mb-3\">\n\t\t\t\t\t\t<Form.Control name={`team2Name`} placeholder=\"Nom de l'équipe\" maxLength=\"25\" onChange={this.handleChange}/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col className=\"mb-3\">\n\t\t\t\t\t\t<SliderPicker color={ this.state.team2Color } onChange={ this.handleChangeTeam2ColorDrag }onChangeComplete={ this.handleChangeTeam2Color }/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t{team2Form}\n\t\t\t\t<Button onClick={this.handleSubmit} variant=\"success\">\n\t\t\t\t\tLancer la simulation\n\t\t\t\t</Button>\n\t\t\t</Form>\n\n\t\t\t  }\n\t\t  </div>\n\t\t  :\n\t\t  <GameComponent numberCandidates={this.state.numberCandidates} team1Candidates={this.state.team1Candidates} team2Candidates={this.state.team2Candidates} team1Name={this.state.team1Name} team2Name={this.state.team2Name} team1Color={this.state.team1Color} team2Color={this.state.team2Color} />\n\t\t\t  }\n\t\t  </Container>\n\t\t);\n\t}\n}\n\nexport default FormComponent;\n","import React from 'react';\nimport ReactGa from 'react-ga';\nimport emailjs from 'emailjs-com'\n\nimport Form from 'react-bootstrap/Form'\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\n\nclass Contact extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.sendEmail = this.sendEmail.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tReactGa.pageview('/contact')\n\t}\n\n\tsendEmail(e) {\n\t\te.preventDefault();\n\t\temailjs.sendForm('gmail', 'template_dr88k0s', e.target, 'user_zBglHhqUaQ7omCp7GvAHz')\n\t\t\t.then((result) => {\n\t\t\t\talert(\"Bien reçu nous reviendrons vers vous\");\n\t\t\t}, (error) => {\n\t\t\t\talert(error.text);\n\t\t\t});\n\t\te.target.reset()\n\t\tReactGa.event({\n\t\t\tcategory:'Button',\n\t\t\taction: 'Sent contact mail'\n\t\t})\n\t}\n\n    render() {\n        return (\n          <Container>\n\t\t\t<Form onSubmit={this.sendEmail} varient=\"info\">\n\t\t\t  <Form.Group controlId=\"ControlInput\">\n\t\t\t    <Form.Label>Addresse mail</Form.Label>\n\t\t\t    <Form.Control required type=\"email\" name=\"reply_to\" placeholder=\"name@example.com\" />\n\t\t\t  </Form.Group>\n\t\t\t  <Form.Group controlId=\"ControlInput2\">\n\t\t\t    <Form.Label>Nom</Form.Label>\n\t\t\t    <Form.Control required type=\"text\" name=\"name\" placeholder=\"Claude\" />\n\t\t\t  </Form.Group>\n\t\t\t  <Form.Group controlId=\"ControlInput3\">\n\t\t\t    <Form.Label>Objet</Form.Label>\n\t\t\t    <Form.Control required type=\"text\" name=\"subject\" placeholder=\"Super site, comment puis-je vous remercier d'avoir rendue ma vie meilleure ?\" />\n\t\t\t  </Form.Group>\n\t\t\t  <Form.Group controlId=\"ControlTextarea1\">\n\t\t\t    <Form.Label>Message</Form.Label>\n\t\t\t    <Form.Control required as=\"textarea\" name=\"message\" rows={3} />\n\t\t\t  </Form.Group>\n\t\t\t  <Button variant=\"info\" type=\"submit\" className=\"justify-content-md-center mx-auto\">\n\t\t\t\tEnvoyer\n\t\t\t  </Button>\n\t\t\t</Form>\n\n\t\t  </Container>\n\t\t);\n\t}\n}\n\nexport default Contact;\n","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport Header from './components/Header';\nimport FormComponent from './components/FormComponent';\nimport Contact from './pages/Contact';\n\nfunction MainRouter() {\n    return (\n        <Router basename=\"/koh-lanta-simulator\">\n            <div>\n                <Header/>\n\n                <Switch>\n                    <Route exact path=\"/\">\n                        <FormComponent/>\n                    </Route>\n                    <Route exact path=\"/contact\">\n                        <Contact/>\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default MainRouter;\n","import React from 'react';\nimport './App.css';\nimport MainRouter from './MainRouter';\n\n// import { Container, Row, Col, Button } from 'react-bootstrap';\n\nclass Home extends React.Component {\n\n    render() {\n        return (\n          <MainRouter/>\n        );\n    }\n}\n\nexport default Home;\n","import React from 'react';\nimport './App.css';\nimport Home from './Home.js'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactGa from 'react-ga';\nimport { createBrowserHistory as createHistory } from 'history'\n\nfunction App() {\n  const history = createHistory()\n  ReactGa.initialize('UA-180345460-1')\n  history.listen((location, action) => {\n    ReactGa.pageview(location.pathname + location.search);\n  }); \n\n  return (\n    <Home/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}